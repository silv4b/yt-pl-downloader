name: Build Windows and Linux

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller youtube-dl ffmpeg-python

      - name: Build and Prepare Release Assets (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --name playlist-downloader playlist_downloader.py
          mkdir -p release_assets
          mv dist/playlist-downloader release_assets/playlist-downloader-linux
          chmod +x release_assets/playlist-downloader-linux
          echo "Linux build complete"

      - name: Build and Prepare Release Assets (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --name playlist-downloader playlist_downloader.py
          mkdir release_assets
          move dist\playlist-downloader.exe release_assets\playlist-downloader-windows.exe
          echo "Windows build complete"

      - name: Verify Files
        run: |
          echo "Generated files in release_assets:"
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            ls -la release_assets/
          else
            dir release_assets
          fi

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets-${{ matrix.os }}
          path: release_assets/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download All Assets
        uses: actions/download-artifact@v4
        with:
          path: release_assets
          pattern: release-assets-*
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            release_assets/playlist-downloader-linux
            release_assets/playlist-downloader-windows.exe
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_REPO_ACTION }}
