name: Build Windows and Linux

on:
  push:
    tags:
      - 'v*'  # Dispara quando tags como v1.0.0 são criadas

jobs:
  build:
    runs-on: ${{ matrix.os }}  # Matriz de sistemas operacionais
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Linux e Windows
    permissions:
      contents: write  # Permite criar releases

    steps:
      # Passo 1: Baixar o código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # Passo 2: Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Passo 3: Instalar dependências (PyInstaller)
      - name: Install PyInstaller
        run: pip install pyinstaller

      # Passo 4: Gerar o executável
      - name: Build Executable
        run: |
          pyinstaller --onefile src/main.py  # Altere para seu script principal
          # Renomeia o executável conforme o OS
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            mv dist/main dist/app-linux
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv dist/main.exe dist/app-windows.exe
          fi

      # Passo 5: Enviar executáveis para a Release do GitHub
      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/app-linux
            dist/app-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_REPO_ACTION }}  # Token automático do GitHub
