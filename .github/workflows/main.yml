name: Build Windows and Linux

on:
  push:
    tags:
      - 'v*'  # Dispara quando tags como v1.0.0 são criadas

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install pyinstaller youtube-dl ffmpeg-python

      - name: Build Executable
        run: |
          pyinstaller --onefile --name playlist-downloader playlist_downloader.py
          # Verifica se o arquivo foi gerado
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            ls -la dist/
            mv dist/playlist-downloader dist/playlist-downloader-linux
          else
            ls -la dist/
            mv dist/playlist-downloader.exe dist/playlist-downloader-windows.exe
          fi

      - name: Verify files exist
        run: |
          echo "Generated files:"
          ls -la dist/

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/playlist-downloader-linux
            dist/playlist-downloader-windows.exe
          tag_name: ${{ github.ref }}
          draft: false
          replace: true  # Sobrescreve a release se já existir
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_REPO_ACTION }}
